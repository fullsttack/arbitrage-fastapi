# Generated by Django 5.2.4 on 2025-07-08 02:26

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("exchange_order_id", models.CharField(db_index=True, max_length=255)),
                (
                    "order_type",
                    models.CharField(
                        choices=[
                            ("MARKET", "Market Order"),
                            ("LIMIT", "Limit Order"),
                            ("STOP", "Stop Order"),
                            ("STOP_LIMIT", "Stop Limit Order"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=10
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("OPEN", "Open"),
                            ("PARTIAL", "Partially Filled"),
                            ("FILLED", "Filled"),
                            ("CANCELLED", "Cancelled"),
                            ("REJECTED", "Rejected"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "stop_price",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "filled_amount",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "average_price",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "fee",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("fee_currency", models.CharField(blank=True, max_length=10)),
                ("placed_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("filled_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_arbitrage", models.BooleanField(default=False)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "exchange",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core.exchange",
                    ),
                ),
                (
                    "trading_pair",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core.tradingpair",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("LONG", "Long"), ("SHORT", "Short")], max_length=10
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Open"),
                            ("CLOSED", "Closed"),
                            ("LIQUIDATED", "Liquidated"),
                        ],
                        default="OPEN",
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=8, max_digits=20)),
                ("entry_price", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "exit_price",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "stop_loss_price",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "take_profit_price",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "unrealized_pnl",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "realized_pnl",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("opened_at", models.DateTimeField(auto_now_add=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "entry_orders",
                    models.ManyToManyField(
                        blank=True, related_name="entry_positions", to="trading.order"
                    ),
                ),
                (
                    "exchange",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="core.exchange",
                    ),
                ),
                (
                    "exit_orders",
                    models.ManyToManyField(
                        blank=True, related_name="exit_positions", to="trading.order"
                    ),
                ),
                (
                    "trading_pair",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="core.tradingpair",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Position",
                "verbose_name_plural": "Positions",
                "ordering": ["-opened_at"],
            },
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("exchange_trade_id", models.CharField(max_length=255)),
                ("price", models.DecimalField(decimal_places=8, max_digits=20)),
                ("amount", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "fee",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("fee_currency", models.CharField(blank=True, max_length=10)),
                ("executed_at", models.DateTimeField()),
                ("is_maker", models.BooleanField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trades",
                        to="trading.order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trade",
                "verbose_name_plural": "Trades",
                "ordering": ["-executed_at"],
            },
        ),
        migrations.CreateModel(
            name="TradingAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("ORDER_FILLED", "Order Filled"),
                            ("ORDER_CANCELLED", "Order Cancelled"),
                            ("POSITION_OPENED", "Position Opened"),
                            ("POSITION_CLOSED", "Position Closed"),
                            ("STOP_LOSS_HIT", "Stop Loss Hit"),
                            ("TAKE_PROFIT_HIT", "Take Profit Hit"),
                            ("STRATEGY_ERROR", "Strategy Error"),
                            ("LOW_BALANCE", "Low Balance Warning"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="trading.order",
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="trading.position",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trading_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trading Alert",
                "verbose_name_plural": "Trading Alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TradingStrategy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "strategy_type",
                    models.CharField(
                        choices=[
                            ("ARBITRAGE", "Arbitrage"),
                            ("MARKET_MAKING", "Market Making"),
                            ("TREND_FOLLOWING", "Trend Following"),
                            ("MEAN_REVERSION", "Mean Reversion"),
                            ("DCA", "Dollar Cost Averaging"),
                            ("CUSTOM", "Custom Strategy"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=False)),
                ("config", models.JSONField(default=dict)),
                (
                    "max_position_size",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "stop_loss_percentage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "take_profit_percentage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("total_trades", models.IntegerField(default=0)),
                ("winning_trades", models.IntegerField(default=0)),
                (
                    "total_profit",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("next_run", models.DateTimeField(blank=True, null=True)),
                (
                    "enabled_exchanges",
                    models.ManyToManyField(
                        blank=True, related_name="strategies", to="core.exchange"
                    ),
                ),
                (
                    "enabled_pairs",
                    models.ManyToManyField(
                        blank=True, related_name="strategies", to="core.tradingpair"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trading_strategies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trading Strategy",
                "verbose_name_plural": "Trading Strategies",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="position",
            name="strategy",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="positions",
                to="trading.tradingstrategy",
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["user", "-created_at"], name="trading_ord_user_id_ca9b05_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["exchange", "exchange_order_id"],
                name="trading_ord_exchang_3cb202_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["status", "-created_at"], name="trading_ord_status_75898c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="trade",
            unique_together={("order", "exchange_trade_id")},
        ),
        migrations.AddIndex(
            model_name="tradingalert",
            index=models.Index(
                fields=["user", "is_read", "-created_at"],
                name="trading_tra_user_id_21cba7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="position",
            index=models.Index(
                fields=["user", "status", "-opened_at"],
                name="trading_pos_user_id_9c045c_idx",
            ),
        ),
    ]
